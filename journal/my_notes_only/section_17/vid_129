

###  CREATE A REQUIREMENTS.TXT FILE

A REQUIREMENT.TXT FILE IS BASICALLY A NORMAL FILE WHICH HOUSES ALL OF OUR PACKAGES AND DEPENDENCIES THAT WE HAVE BEEN UTILIZING
WITHIN OUR PORJECT, THAT ARE SITUATED WITHIN OUR VIRTUAL ENVIRONMENT

THE REASON WE NEED THIS REQUIREMENTS.TXT FILE IS BECAUSE WHEN WE DEPLOY OUR DJANGO APPLICATION TO RENDER, RENDER IS GOING TO LOOK
FOR THOSE PACKAGES AND INSTALL IT WHILE IT SETS UP OUR DJANGO APPLICATION FOR DEPLOYMENT

## NOW IN THE COMMAND LINE, WE WILL RUN THIS COMMAND,  pip freeze > requirements.txt

This command, pip freeze > requirements.txt, is commonly used in Python development to capture the current state of your project's dependencies
and save them to a file called requirements.txt. Here's how it works:

When you run pip freeze, it lists all the currently installed Python packages and their versions in your virtual environment. This includes both
the packages you installed directly and their dependencies.

The > symbol is a redirection operator that takes the output of the pip freeze command and writes it to a file. In this case, it writes the output to a file named requirements.txt.

So, when you run pip freeze > requirements.txt, it captures the list of installed packages and their versions and saves them to the requirements.txt file.
This file serves as a record of your project's dependencies, making it easier to recreate the same environment on another system or share it with collaborators.
It's commonly used in combination with tools like pip install -r requirements.txt to install the exact dependencies specified in the file.

## IF YOU LOOK BELOW THE MANAGE.PY FILE, REQUIREMENTS.TXT FILE HAS BEEN CREATED AND IT WILL HAVE THE LIST OF ALL DEPENDENCIES AND PACKAGES THAT WE HAVE BEEN UTILIZING
